<h1>Finalizar Compra</h1>

<div id="paymentBrick_container"></div>

<script>
  const mp = new MercadoPago('<%= ENV["MERCADO_PAGO_PUBLIC_KEY"] %>', {
    locale: 'pt-BR'
  });

  const bricksBuilder = mp.bricks();

  const renderPaymentBrick = async (bricksBuilder) => {
    const settings = {
      initialization: {
        amount: <%= @total.to_f %>,
          // payer: {
          //   firstName: "",
          //   lastName: "",
          //   email: "",
          // },
        },
        customization: {
          visual: {
            style: {
              theme: "default",
            },
          },
          paymentMethods: {
            creditCard: "all",
										atm: "all",
            maxInstallments: 12
          },
        },
        callbacks: {
          onReady: () => {
            /*
             Callback chamado quando o Brick está pronto.
             Aqui, você pode ocultar seu site, por exemplo.
            */
          },
onSubmit: ({ selectedPaymentMethod, formData }) => {
  return new Promise((resolve, reject) => {
    fetch("/pagamento", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(formData),
    })
      .then((response) => response.json())
      .then((response) => {
        console.log("Resposta completa do pagamento:", response);

        if (response.success) {
          window.location.href = response.redirect_url; // Redireciona para a página de sucesso
        } else {
          alert(`Pagamento não aprovado: ${response.message}`);
          console.error("Erro no pagamento:", response.raw_response);
        }

        resolve();
      })
      .catch((error) => {
        console.error("Erro ao processar pagamento:", error);
        alert("Erro ao processar pagamento.");
        reject();
      });
  });
},

          onError: (error) => {
            // callback chamado para todos os casos de erro do Brick
            console.error(error);
          },
        },
      };
      window.paymentBrickController = await bricksBuilder.create(
        "payment",
        "paymentBrick_container",
        settings
      );
    };
    renderPaymentBrick(bricksBuilder);
  </script>